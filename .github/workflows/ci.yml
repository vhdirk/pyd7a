name: ci

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python }}
        run: uv python install ${{ matrix.python }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Lint check
        run: uv run ruff check -- --respect-gitignore --force-exclude
        continue-on-error: true

      - name: Format check
        run: uv run ruff format --check -- --respect-gitignore --force-exclude
        continue-on-error: true

      - name: Type check
        uses: jakebailey/pyright-action@v2
        continue-on-error: true
        with:
          version: "PATH"
          python-version: "${{ matrix.python }}"

      - name: Unit Test
        run: uv run pytest --junitxml=test-report.xml --html=test-report.html --self-contained-html --cov --cov-report term --cov-report xml:coverage.xml --cov-report html:coverage
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python }}"

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: coverage-${{ matrix.python }}
          path: .coverage.${{ matrix.python }}

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        id: download
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_COVERAGE_FILES: true

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
